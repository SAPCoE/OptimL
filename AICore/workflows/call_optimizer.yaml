apiVersion: ai.sap.com/v1alpha1
kind: ServingTemplate
metadata:
  name: sap-optiml-example-deployment # executable ID, must be unique across your SAP AI Core instance, for example use `server-pipeline-yourname-1234`
  annotations:  
    scenarios.ai.sap.com/description: "Optimization Libraries (Example)"
    scenarios.ai.sap.com/name: "sap-optiml-example-deployment"
    executables.ai.sap.com/description: "Create online server to call optimization libraries"
    executables.ai.sap.com/name: "sap-optim-model-deployment"
   
  labels:
    scenarios.ai.sap.com/id: "sap-optiml-example-deployment"
    ai.sap.com/version: "2.1"
spec:
  inputs:
    parameters:
      - name: optimizer # (options are: 'Pyomo','Gurobi','Xpress')
        type: string 
  template:
    apiVersion: "serving.kubeflow.org/v1beta1"
    metadata:
      annotations: |
        autoscaling.knative.dev/metric: concurrency   # condition when to scale
        autoscaling.knative.dev/target: 1
        autoscaling.knative.dev/targetBurstCapacity: 0
      labels: |
        ai.sap.com/resourcePlan: starter # computing power
    spec: |
      predictor:
        imagePullSecrets:
          - name: docker-registry-secret   # your docker registry secret
        minReplicas: 1
        maxReplicas: 5    # how much to scale
        containers:
        - name: kfserving-container
          image: "docker.io/sapgcoe/sap-optiml-example:2.0"
          ports:
            - containerPort: 9001   # customizable port
              protocol: TCP
          command: ["/bin/sh", "-c"]
          args:
            - >
              set -e && echo "Starting" && gunicorn --chdir /app app:app -b 0.0.0.0:9001 # filename `app` flask variable `app`
          env:
            - name: optimizer 
              value: "{{inputs.parameters.optimizer}}"
